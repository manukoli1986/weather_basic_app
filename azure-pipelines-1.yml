# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Free Trial(e2d18e59-76c4-4b18-957f-c019eb88f462)'
        azureContainerRegistry: '{"loginServer":"dockerhub1.azurecr.io", "id" : "/subscriptions/e2d18e59-76c4-4b18-957f-c019eb88f462/resourceGroups/simple-java-project/providers/Microsoft.ContainerRegistry/registries/dockerhub1"}'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/'
        Contents: '*'
        TargetFolder: '$(build.artifactstagingdirectory)/'
        OverWrite: true
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(build.artifactstagingdirectory)'
        artifactName: drop
    # - task: PublishPipelineArtifact@1
    #   inputs:
    #     targetPath: '$(Pipeline.Workspace)'
    #     artifact: 'Dockerfile'
    #     publishLocation: 'Drop'
    

# stage: Deploy
#   displayName: Deploy App On Container
#   jobs:  
#   - job: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         command: build
#         dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
#         tags: |
#           $(tag)
    